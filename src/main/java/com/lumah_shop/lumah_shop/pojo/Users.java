package com.lumah_shop.lumah_shop.pojo;

import DAO.Auth;
import DAO.DAOUser;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.context.FacesContext;
import javax.servlet.http.HttpSession;
import org.hibernate.annotations.DynamicUpdate;

/**
 * Users generated by hbm2java
 */
@ManagedBean
@DynamicUpdate
public class Users implements java.io.Serializable {
    private Integer id;
    private String name;
    private String email;
    private String password;
    private String level;
    private Date createdAt;
    private Date updatedAt;
    private Set orderses = new HashSet(0);

    public List<Users> getAllUser() {
        DAOUser usr = new DAOUser();
        return usr.showAll();
    }

    public void store() {
        DAOUser user = new DAOUser();
        user.store(this);
    }

    public String getById(int usrId) {
        DAOUser user = new DAOUser();
        List<Users> pro = user.Show(usrId);

        id = pro.get(0).id;
        name = pro.get(0).name;
        email = pro.get(0).email;
        level = pro.get(0).level;

        return "user_edit";
    }

    public String update() {
        DAOUser user = new DAOUser();
        user.updateRole(id, level);

        return "user";
    }

    public void delete(int id) {
        DAOUser usr = new DAOUser();
        usr.destroy(id);
    }

    public String login() {
        Auth auth = new Auth();
        Users userData = auth.Login(email, password);
        FacesContext context = FacesContext.getCurrentInstance();

        if (userData == null) {
            context.addMessage(null, new FacesMessage("Unknown login, try again"));
            email = null;
            password = null;
            return "login";
        } else {
            HttpSession session = (HttpSession) context.getExternalContext().getSession(true);
            session.setAttribute("user", userData);

            if (userData.level.equals("admin")) {
                return "dashboard";
            } else {
                return "customer_product";
            }
        }
    }

    public String register() {
        if (email.equals("UserEmail@mail.com")) {
            return "register";
        }

        Auth auth = new Auth();
        setLevel(level == null ? "customer" : level);
        auth.Register(this);

        return "login";
    }

    public Users getUserData() {
        FacesContext context = FacesContext.getCurrentInstance();
        HttpSession session = (HttpSession) context.getExternalContext().getSession(true);
        Users user = (Users) session.getAttribute("user");

        if (user == null) {
            Date date = new Date();
            long time = date.getTime();
            Timestamp ts = new Timestamp(time);

            user = new Users(0, "User", "UserEmail@mail.com", "password", "customer", ts, ts);
        }

        return user;
    }

    public String logout() {
        FacesContext context = FacesContext.getCurrentInstance();
        HttpSession session = (HttpSession) context.getExternalContext().getSession(true);
        session.removeAttribute("user");

        return "index";
    }

    public int userTotal() {
        return new DAOUser().userTotal();
    }

    public Users() {
    }

    public Users(String name, String email, String password, String level, Date createdAt, Date updatedAt) {
        this.name = name;
        this.email = email;
        this.password = password;
        this.level = level;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    public Users(int id, String name, String email, String password, String level, Date createdAt, Date updatedAt) {
        this.id = id;
        this.name = name;
        this.email = email;
        this.password = password;
        this.level = level;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    public Users(int id, String name, String email, String password, String level, Date createdAt, Date updatedAt,
            Set orderses) {
        this.id = id;
        this.name = name;
        this.email = email;
        this.password = password;
        this.level = level;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.orderses = orderses;
    }

    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getLevel() {
        return this.level;
    }

    public void setLevel(String level) {
        this.level = level;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    public Set getOrderses() {
        return this.orderses;
    }

    public void setOrderses(Set orderses) {
        this.orderses = orderses;
    }

}
